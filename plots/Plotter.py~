from datadef import RampDef
import random
import numpy as np

def plot_test(main):

    RampDef.testRamp.printInfos()

    
    main.draw_plot('RampEditor',  [random.random() for i in range(10)])
    main.draw_plot('StoneEditor', [random.random() for i in range(100)])

    main.remove_plot('RampEditor')
    main.draw_plot('RampEditor',  [random.random() for i in range(150)])

    
def make_plot_ramp(main, plot_name, window):
    ax = main.axs[window] 
    can  = main.canvas[window]

    Ramp =  RampDef.testRamp
    timings = []
    momenta = []
    Qxs = []
    Qys = []
    for i in range(len(Ramp.stoneList)) :
        timings.append(Ramp.stoneList[i].timing)

    
    if plot_name == 'Momentum'  :
        for i in range(len(Ramp.stoneList)) :
            momenta.append(Ramp.stoneList[i].momentum)
        
        ax.plot(timings, momenta, '--x', markersize=12)
        ax.grid(True)
        ax.set_xlabel('Timing (ms)')
        ax.set_ylabel('Momentum (MeV/c)')
        can.draw_idle()
        
    elif plot_name == 'Tune' :
        for i in range(len(Ramp.stoneList)) :
            Qxs.append(Ramp.stoneList[i].Qx)
            Qys.append(Ramp.stoneList[i].Qy)
        
        ax.plot(timings, Qxs, '--x', label='Qx', markersize=12)
        ax.plot(timings, Qys, '--+', label='Qy', markersize=12)
        ax.grid(True)
        ax.set_xlabel('Timing (ms)')
        ax.set_ylabel('Tunes')
        ax.legend()
        can.draw_idle()
        

    # if plot_name == 'Rigidity'  :
        
    #     name1 = 'Rigidity'
    #     main.axs[window].plot(np.random.rand(5), '-*')
    #     main.axs[window].grid(True)
    #     main.axs[window].set_title('Ridity')
    #     main.canvas[window].draw_idle()
        

    # elif plot_name == 'Tune' :
        

    #     # make plot of tune
    #     name1 = 'Rigidity'
    #     fig1 = Figure()
    #     ax1f1 = fig1.add_subplot(111)
    #     ax1f1.plot(np.random.rand(10))
        

    
